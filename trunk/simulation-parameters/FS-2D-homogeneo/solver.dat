All solver parameters are defined here. PETSc is the library used to do so.  
PETSc KSP solver parameters
================================================================================
 
absolute convergence tolerance
1e-50

relative convergence tolerance for KSP solver
1e-6

relative convergence tolerance for external iteration
1e-6

convergence tolerance in terms of the norm of the change in the solution between steps
10000

maximum number of iterations
10000

Sets number of iterations at which GMRES, FGMRES and LGMRES restarts:
40

Define a preconditioner (Default: none)
(x) JACOBI ....... Jacobi (i.e. diagonal scaling preconditioning) 
() SOR .......... (S)SOR (successive over relaxation, Gauss-Seidel) preconditioning 
() LU ........... Uses a direct solver, based on LU factorization, as a preconditioner 
() SHELL ........ Creates a new preconditioner class for use with your own private data storage format
() BJACOBI ...... Use block Jacobi preconditioning, each block is (approximately) solved with its own KSP object.
() MG ........... Use multigrid preconditioning. This preconditioner requires you provide additional information about the coarser grid matrices and restriction/interpolation operators.
() EISENSTAT .... An implementation of SSOR (symmetric successive over relaxation, symmetric Gauss-Seidel) preconditioning that incorporates Eisenstat's trick to reduce the amount of computation needed.
() ILU .......... Incomplete factorization preconditioners. Notes: Only implemented for some matrix formats. Not implemented in parallel 
() ICC .......... Incomplete Cholesky factorization preconditioners.
() ASM .......... Use the (restricted) additive Schwarz method, each block is (approximately) solved with its own KSP object.

Obs.: Consult PETCs Manual for more details about PCs!

Use <defect-correction> scheme for EBFV1 pressure solver?: (default: matrix-free scheme)
() yes
