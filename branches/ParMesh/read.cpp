/*
 * read.cpp
 *
 *  Created on: 28/12/2014
 *      Author: rogerio
 */

#include "mesh.h"

namespace MeshDB{
	void Mesh::read(const char* filename){
		cout << "Reading finite element mesh generated by Gmsh (File format: v1.0)\n";
		ifstream fid;
		fid.open(filename);
		int NbNod, ID;
		double x,y,z;
		char line[256];
		fid.getline (line,256);
		fid >> NbNod;
		cout << "Nodes: " << NbNod;
		for(int i=0;i<NbNod;i++){
			fid >> ID >> x >> y >> z;
			createVertex(ID,x,y,z,-1,-1);
		}
		numVertices_before = NbNod;
		fid.getline (line,256);
		fid.getline (line,256);
		fid.getline (line,256);
		fid >> NbNod;
		cout << "  Elements: " << NbNod << "\n\n";
		int IDs[10];
		int iNbNod,elemType,physical,iElm,geom;

		numEdges_before = 0;
		numQuad_before = 0;
		numTriangles_before = 0;
		numTetra_before = 0;

		for (int i=0; i<NbNod; i++){
			fid >> iElm >> elemType >> physical >> geom >> iNbNod;
			for(int i=0;i<iNbNod;i++){
				fid >> IDs[i];
			}

			switch(elemType){
			// precribed nodes
			case 15:
				setVertex((IDs[0]),physical,geom);
				break;
				// prescribed edges
			case 1:
				createEdge(IDs[0],IDs[1],physical,geom);
				break;
				// prescribed triangles
			case 2:
				createTriangle(IDs[0],IDs[1],IDs[2],physical,geom);
				numTriangles_before++;
				break;
			case 4:
				createTetrahedron(IDs[0],IDs[1],IDs[2],IDs[3],physical,geom);
				numTetra_before++;
				break;
			}
			//cout << "OK!\n";
		}
		setChacteristics();
	}
}
